{"version":3,"sources":["views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["module","exports","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","authOperations","logIn","className","s","form","autoComplete","TextField","required","id","label","type","variant","onChange","Button","color"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,2B,6JCO3E,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,8BAGE,uBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACFb,EAASc,IAAeC,MAAM,CAAEZ,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAOoBU,UAAWC,IAAEC,KAAMC,aAAa,MAA9D,UACE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,KAAK,QACLf,KAAK,QACLC,MAAOP,EACPsB,QAAQ,WACRT,UAAWC,IAAEM,MACbG,SAAUnB,IAEZ,cAACa,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,KAAK,WACLf,KAAK,WACLC,MAAOL,EACPoB,QAAQ,WACRT,UAAWC,IAAEM,MACbG,SAAUnB,IAEZ,cAACoB,EAAA,EAAD,CAAQF,QAAQ,WAAWG,MAAM,UAAUJ,KAAK,SAAhD","file":"static/js/login-view.ebd5129d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"LoginView_title__29PHm\",\"form\":\"LoginView_form__3OvsG\",\"label\":\"LoginView_label__12UhS\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\n\nimport s from './LoginView.module.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      {/* <h1 className={s.title}>Sign in</h1> */}\n\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          variant=\"outlined\"\n          className={s.label}\n          onChange={handleChange}\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          variant=\"outlined\"\n          className={s.label}\n          onChange={handleChange}\n        />\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n          Sign in\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}